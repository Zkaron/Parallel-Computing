/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Parcial1.productorconsumidor.philosopherdinner;

import java.util.concurrent.Semaphore;
import javax.swing.JLabel;

/**
 *
 * @author Erik
 */
public class DinningPhilosophers extends javax.swing.JFrame {
    
    private final byte philosopherNumber = 5;
    private byte philosopherForks[][] = {
        {0, 4},
        {1, 0},
        {2, 1},
        {3, 2},
        {4, 3}
    };
    private JLabel[] philosophersJLabel;
    private Semaphore[] semaphoreForks;
    private Philosopher[] philosophersThread;

    /**
     * Creates new form DinningPhilosophers
     */
    public DinningPhilosophers() {
        initComponents();
        semaphoreForks = new Semaphore[philosopherNumber];
        philosophersThread = new Philosopher[philosopherNumber];
        for(byte i = 0; i < philosopherNumber; i++) {
            semaphoreForks[i] = new Semaphore(1);
        }
        
        assignLabelPerPhilosopher();
    }
    
    private void assignLabelPerPhilosopher() {
        philosophersJLabel = new JLabel[philosopherNumber];
        philosophersJLabel[0] = philosopherJLabel0;
        philosophersJLabel[1] = philosopherJLabel1;
        philosophersJLabel[2] = philosopherJLabel2;
        philosophersJLabel[3] = philosopherJLabel3;
        philosophersJLabel[4] = philosopherJLabel4;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        philosopherJLabel0 = new javax.swing.JLabel();
        philosopherJLabel1 = new javax.swing.JLabel();
        philosopherJLabel2 = new javax.swing.JLabel();
        philosopherJLabel3 = new javax.swing.JLabel();
        philosopherJLabel4 = new javax.swing.JLabel();
        StartButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        philosopherJLabel0.setText("jLabel1");

        philosopherJLabel1.setText("jLabel2");

        philosopherJLabel2.setText("jLabel3");

        philosopherJLabel3.setText("jLabel4");

        philosopherJLabel4.setText("jLabel5");

        StartButton.setText("Start");
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(philosopherJLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(philosopherJLabel1)
                .addGap(99, 99, 99))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(philosopherJLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(philosopherJLabel2)
                .addGap(182, 182, 182))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(philosopherJLabel0))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(StartButton)
                        .addGap(62, 62, 62)
                        .addComponent(stopButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(philosopherJLabel0)
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(philosopherJLabel1)
                    .addComponent(philosopherJLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(philosopherJLabel2)
                    .addComponent(philosopherJLabel3))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartButton)
                    .addComponent(stopButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        for(byte i = 0; i < philosopherNumber; i++) {
            philosophersThread[i] = new Philosopher(i, semaphoreForks, philosopherForks, philosophersJLabel[i]);
            philosophersThread[i].start();
        }
    }//GEN-LAST:event_StartButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        for(byte i = 0; i < philosopherNumber; i++) {
            philosophersThread[i].terminate();
            
            try {
                philosophersThread[i].join();
            } catch(InterruptedException e) {
                e.printStackTrace();
            }
        }     
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DinningPhilosophers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DinningPhilosophers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DinningPhilosophers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DinningPhilosophers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DinningPhilosophers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartButton;
    private javax.swing.JLabel philosopherJLabel0;
    private javax.swing.JLabel philosopherJLabel1;
    private javax.swing.JLabel philosopherJLabel2;
    private javax.swing.JLabel philosopherJLabel3;
    private javax.swing.JLabel philosopherJLabel4;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
